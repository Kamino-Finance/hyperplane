name: Token Pull Request

on:
  pull_request:
    paths:
    - 'associated-token-account/**'
    - 'token/**'
    - 'ci/*-version.sh'
    - '.github/workflows/pull-request-token.yml'
  push:
    branches: [master]
    paths:
    - 'associated-token-account/**'
    - 'token/**'
    - 'ci/*-version.sh'
    - '.github/workflows/pull-request-token.yml'

jobs:
  cargo-test-sbf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source ci/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
          source ci/solana-version.sh
          echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_STABLE}}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/rustfilt
          key: cargo-sbf-bins-${{ runner.os }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/solana
          key: solana-${{ env.SOLANA_VERSION }}

      - name: Install dependencies
        run: |
          ./ci/install-build-deps.sh
          ./ci/install-program-deps.sh
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build and test token
        run: ./ci/cargo-test-sbf.sh token

      - name: Build and test ATA
        run: ./ci/cargo-test-sbf.sh associated-token-account

      - name: Build and test token-2022 with "serde" activated
        run: |
          cargo +"${{ env.RUST_STABLE }}" test \
            --manifest-path=token/program-2022/Cargo.toml \
            --features serde-traits \
            -- --nocapture
          exit 0

      - name: Upload programs
        uses: actions/upload-artifact@v2
        with:
          name: token-programs
          path: "target/deploy/*.so"
          if-no-files-found: error

  cargo-test-sbf-twoxtx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set env vars
        run: |
          echo "RUST_STABLE_VERSION=1.65.0" >> $GITHUB_ENV
          source ci/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
          source ci/solana-version.sh
          echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_STABLE }}

      - name: Install dependencies
        run: |
          ./ci/install-build-deps.sh
          ./ci/install-program-deps.sh
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build and test token-2022 twoxtx (TEMPORARY)
        run: |
          ./token/twoxtx-setup.sh
          ./ci/cargo-test-sbf.sh token/program-2022-test

  js-test:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 16.x
    needs: cargo-test-sbf
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-${{ hashFiles('token/js/package-lock.json') }}
          restore-keys: |
            node-
      - name: Download programs
        uses: actions/download-artifact@v2
        with:
          name: token-programs
          path: target/deploy
      - run: ./ci/js-test-token.sh

  cargo-build-test-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source ci/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
          source ci/solana-version.sh
          echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_STABLE }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/solana
          key: solana-${{ env.SOLANA_VERSION }}

      - name: Install dependencies
        run: |
          ./ci/install-build-deps.sh
          ./ci/install-program-deps.sh
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build and test
        run: |
          BUILD_DEPENDENT_PROGRAMS=1 cargo build --manifest-path ./token/cli/Cargo.toml
          cargo test --manifest-path ./token/cli/Cargo.toml
